defaults: &defaults
  working_directory: ~/truemail-server
  docker:
    - image: cimg/ruby:3.1.2

references:
  install_bundler: &install_bundler
    run:
      name: Installing bundler
      command: gem i bundler -v $(tail -1 Gemfile.lock | tr -d ' ')

  restore_bundle_cache: &restore_bundle_cache
    restore_cache:
      keys:
        - truemail-server-{{ checksum "Gemfile" }}

  bundle_install: &bundle_install
    run:
      name: Installing gems
      command: |
            bundle config set --local path 'vendor/bundle'
            bundle install

  save_bundle_cache: &save_bundle_cache
    save_cache:
      key: truemail-server-{{ checksum "Gemfile" }}
      paths:
        - vendor/bundle

  install_codeclimate_reporter: &install_codeclimate_reporter
    run:
      name: Installing CodeClimate test reporter
      command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

version: 2
jobs:
  linters:
    <<: *defaults

    steps:
      - checkout

      - <<: *install_bundler
      - <<: *restore_bundle_cache
      - <<: *bundle_install
      - <<: *save_bundle_cache

      - run:
          name: Running Overcommit
          command: |
            bundle exec overcommit -s
            SKIP=AuthorEmail,AuthorName bundle exec overcommit -r

  tests:
    <<: *defaults

    steps:
      - checkout

      - <<: *install_bundler
      - <<: *restore_bundle_cache
      - <<: *bundle_install
      - <<: *save_bundle_cache
      - <<: *install_codeclimate_reporter

      - run:
          name: Running RSpec
          command: |
            ./cc-test-reporter before-build
            bundle exec rspec

      - run:
          name: Creating CodeClimate test coverage report
          command: |
            ./cc-test-reporter format-coverage -t simplecov -o "coverage/codeclimate.$CIRCLE_NODE_INDEX.json"

      - store_artifacts:
          name: Saving Simplecov coverage artifacts
          path: ~/truemail-server/coverage
          destination: coverage

      - deploy:
          name: Uploading CodeClimate test coverage report
          command: |
            ./cc-test-reporter sum-coverage --output - --parts $CIRCLE_NODE_TOTAL coverage/codeclimate.*.json | ./cc-test-reporter upload-coverage --debug --input -

workflows:
  version: 2
  build:
    jobs:
      - linters
      - tests
